name: Create Release
run-name: Detoxdemo release (Version update = ${{ inputs.versionUpdate }}) ðŸš€
on:
  workflow_dispatch:
    inputs:
      versionUpdate:
        description: 'Version update (None, Build, Patch, Minor or Major)'
        default: 'None'
        required: true

env:
  CODE_BRANCH: 'develop'
  MOBILE_BUILD_NAME: 'Detoxtest'

jobs:
  preBuild:
    runs-on: ubuntu-latest
    outputs:
      codeBranch: ${{ steps.pre_build.outputs.codeBranch }}
      previousVersion: ${{ steps.pre_build.outputs.previousVersion }}
      nextVersion: ${{ steps.pre_build.outputs.nextVersion }}
      previousBuild: ${{ steps.pre_build.outputs.previousBuild }}
      buildNumber: ${{ steps.pre_build.outputs.buildNumber }}

    steps:
      - name: Validate version update input
        if: ${{ inputs.versionUpdate != 'Major' && inputs.versionUpdate != 'Minor' && inputs.versionUpdate != 'Patch' && inputs.versionUpdate != 'Build' && inputs.versionUpdate != 'None' }}
        run: |
          echo Valid version update options are None, Build, Patch, Minor, and Major
          exit 1

      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.CODE_BRANCH }}
          fetch-depth: 0

      - name: Execute preBuild
        id: pre_build
        uses: ./.github/workflows/pre-build
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          versionUpdate: ${{ inputs.versionUpdate }}

  build:
    runs-on: ubuntu-latest
    needs: preBuild
    steps:
      - name: Save preBuild values
        run: |
          echo "CODE_BRANCH=${{ needs.preBuild.outputs.codeBranch }}" >> $GITHUB_ENV
          echo "PREVIOUS_VERSION=${{ needs.preBuild.outputs.previousVersion }}" >> $GITHUB_ENV
          echo "NEXT_VERSION=${{ needs.preBuild.outputs.nextVersion }}" >> $GITHUB_ENV
          echo "PREVIOUS_BUILD=${{ needs.preBuild.outputs.previousBuild }}" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.CODE_BRANCH }}
          fetch-depth: 0

      - name: Client dependencies
        uses: ./.github/workflows/dependencies
        with:
          mobilePath: ./

      - name: Client code analysis
        working-directory: ./
        run: |
          yarn analyze

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Set Build Number
        working-directory: ./
        run: |
          echo "BUILD_NUMBER=$(bash set-version-android.sh ${{ env.NEXT_VERSION }})" >> $GITHUB_ENV

      - name: Set Full Version
        working-directory: ./
        run: |
          echo "FULL_VERSION=${{ env.NEXT_VERSION }}.${{ env.BUILD_NUMBER }}" >> $GITHUB_ENV

      - name: Set artifact names
        run: |
          echo "SERVER_ARTIFACT_PREFIX=${{ env.SERVER_BUILD_NAME }}.${{ env.NEXT_VERSION }}" >> $GITHUB_ENV
          echo "MOBILE_ARTIFACT_PREFIX=${{ env.MOBILE_BUILD_NAME }}.${{ env.FULL_VERSION }}" >> $GITHUB_ENV

      - name: Set artifact names P2
        run: |
          echo "UNSIGNED_APK_NAME=${{ env.MOBILE_ARTIFACT_PREFIX }}-unsigned.apk" >> $GITHUB_ENV
          echo "SIGNED_APK_NAME=${{ env.MOBILE_ARTIFACT_PREFIX }}.apk" >> $GITHUB_ENV

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1.2.0
        with:
          ndk-version: r21e

      - name: Build android
        working-directory: ./android
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease --no-daemon --info

      - name: Sign App
        id: sign_app
        uses: mymine/sign-android-release@25eb0226507d3916a03ffe9decc5b16aa62287a0
        with:
          releaseDirectory: ./android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_BASE64 }}
          alias: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEYSTORE_KEY_PASSWORD }}

      - name: Copy Unsigned APK
        working-directory: ./android/app/build/outputs/apk/release
        run: |
          cp app-release-unsigned.apk ${{ env.UNSIGNED_APK_NAME }}
          ls

      - name: Copy Signed APK
        id: copy-signed-apk
        working-directory: ./android/app/build/outputs/apk/release
        run: |
          cp app-release-unsigned-signed.apk ${{ env.SIGNED_APK_NAME }}
          ls

      - name: Upload Unsigned APK
        uses: actions/upload-artifact@v3.1.1
        with:
          name: ${{ env.MOBILE_ARTIFACT_PREFIX }}
          path: |
            ./android/app/build/outputs/apk/release/${{ env.UNSIGNED_APK_NAME }}
          if-no-files-found: error

      - name: Upload Signed APK
        uses: actions/upload-artifact@v3.1.1
        with:
          name: ${{ env.MOBILE_ARTIFACT_PREFIX }}
          path: |
            ./android/app/build/outputs/apk/release/${{ env.SIGNED_APK_NAME }}
          if-no-files-found: error

      - name: Commit changes
        if: ${{ env.NEXT_VERSION != env.PREVIOUS_VERSION || env.BUILD_NUMBER != env.PREVIOUS_BUILD }}
        run: |
          git add -u
          git commit --message "Prepare release ${{ env.NEXT_VERSION }}"
          echo "COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Push new branch
        if: ${{ env.NEXT_VERSION != env.PREVIOUS_VERSION || env.BUILD_NUMBER != env.PREVIOUS_BUILD }}
        run: git push origin ${{ env.CODE_BRANCH }}

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: List artifacts
        run: |
          ls -R artifacts

      - name: Create Release
        if: ${{ env.NEXT_VERSION != env.PREVIOUS_VERSION || env.BUILD_NUMBER != env.PREVIOUS_BUILD }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEXT_VERSION }}
          name: Release ${{ env.NEXT_VERSION }}
          target_commitish: ${{ env.COMMIT }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Changes in this Release:
            ${{ steps.changelog.outputs.changelog }}
          files: |
            artifacts/${{ env.MOBILE_ARTIFACT_PREFIX }}/${{ env.UNSIGNED_APK_NAME }}
            artifacts/${{ env.MOBILE_ARTIFACT_PREFIX }}/${{ env.SIGNED_APK_NAME }}
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
