// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {


    def androidGradlePluginVersion = '4.2.2'

    println "[$project] Resorted to Android Gradle-plugin version $androidGradlePluginVersion"

    ext {
        buildToolsVersion = "30.0.2"
        minSdkVersion = 21
        compileSdkVersion = 30
        targetSdkVersion = 30
        ndkVersion = "21.4.7075529"
        kotlinVersion = '1.6.21'
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:$androidGradlePluginVersion")
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    }
}

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        maven {
            url "$rootDir/../node_modules/detox/Detox-android"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        mavenCentral {
            // We don't want to fetch react-native from Maven Central as there are
            // older versions over there.
            content {
                excludeGroup "com.facebook.react"
            }
        }
        google()
        maven { url 'https://www.jitpack.io' }
    }
}

subprojects {
    afterEvaluate {project ->
		// NOTE: The following will force react-native-bluetooth-classic" to see a specific versions of the tools.
		// We need this to resolve a build issue. Once RNBC is upgraded (or we create a fork) we can update (or remove) this.
        if (project.name.equals("react-native-bluetooth-classic")) {
			println('Setting ' + project.name + ' to compileSdkVersion 29 and buildToolsVersion 29.0.3');
            android {
                compileSdkVersion = 29
                buildToolsVersion = "29.0.3"
            }
        }
        if (it.hasProperty('android')){
            android {
                defaultConfig {
                    minSdkVersion 21 // Replace '21' with whatever suites your case
                }
            }
        }
    }
}